/**
 * @api {endpoint / fetch} /io.scalecube.configuration.api.ConfigurationService/fetch Get specified entry
 * @apiName Fetch
 * @apiGroup Fetch
 * @apiVersion 0.0.0-CURRENT
 * @apiDescription This operation enable you to get specific value (either string or object) by retrieving specified entry (key) from the relevant Repository and enabled for each accessible permission level (read&write) granted for owner either admin or member role
 * @apiParam {Object} token The requested API key (token) which assigned with relevant role (permission level)
 * @apiParam {String} repository Specified name of the repository
 * @apiParam {String} key Specified key name (entry) for relevant configuration setting in the repository
 *
 * @apiSuccess {Object} value Specified node name applied for relevant configuration settings in the repository
 * @apiSuccess {String} key Specified key name (entry) for relevant configuration setting in the repository
 *
 * @apiParamExample {json} Request-Example (WS):
 *     {
 *         "q": "/io.scalecube.configuration.api.ConfigurationService/fetch",
 *         "sid": 1,
 *         "d":{
 *         "token": "validApiKey",
 *         "repository": "specifiedRepoName",
 *         "key": "specifiedKeyName"
 *         }
 *     }
 *
 * @apiParamExample {json} Request-Example (RS):
 *     {
 *       "metadata":{
 *         "q": "/io.scalecube.configuration.api.ConfigurationService/fetch"
 *         },
 *         "data":{
 *         "token": "validApiKey",
 *         "repository": "specifiedRepoName",
 *         "key": "specifiedKeyName"
 *         }
 *     }
 *
 * @apiParamExample {json} Request-Example (HTTP):
 *     {
 *         "token": "validApiKey",
 *         "repository": "specifiedRepoName",
 *         "key": "specifiedKeyName"
 *     }
 *
 * @apiSuccessExample Success-Response (WS):
 *     {
 *         "q":"/io.scalecube.configuration.api.ConfigurationService/fetch",
 *         "sid":1,
 *         "d":{
 *         "value": {
 *                    "name": "Gold",
 *                    "instrument": "XAU",
 *                    "DecimalPrecision" : "2",
 *                    "Rounding": "down"
 *                  },
 *         "key": "specifiedKeyName"
 *         }
 *     }
 *
 *     {
 *          "sig":1,
 *          "sid":1
 *     }
 *
 * @apiSuccessExample Success-Response (RS):
 *    {
 *        "data":{
 *        "value": {
 *                   "name": "Gold",
 *                   "instrument": "XAU",
 *                   "DecimalPrecision" : "2",
 *                   "Rounding": "down"
 *                 },
 *        "key": "specifiedKeyName"
 *       },
 *       "metadata":{
 *          "q": "/io.scalecube.configuration.api.ConfigurationService/fetch"
 *       }
 *    }
 *
 * @apiSuccessExample Success-Response (HTTP):
 *    {
 *        "value": {
 *                   "name": "Gold",
 *                   "instrument": "XAU",
 *                   "DecimalPrecision" : "2",
 *                   "Rounding": "down"
 *                 },
 *        "key": "specifiedKeyName"
 *    }
 *
 * @apiError {String} field invalid or non-existent plain key name (entry in the repository)
 *
 * @apiErrorExample {json} Error-Response (WS):
 *    {
 *         "sig":2,
 *         "q":"/io.scalecube.services.error/500",
 *         "sid":1,
 *         "d":{
 *                 errorCode":500,
 *                 "errorMessage":"16562665EC17CDF08E97"
 *         }
 *    }
 *
 * @apiErrorExample {json} Error-Response (RS):
 *    {
 *         "data":{
 *         "errorCode":500,
 *         "errorMessage":"16562665EC17CDF08E97"
 *         },
 *         "metadata":{
 *             "q":"/io.scalecube.services.error/500"
 *         }
 *    }
 *
 * @apiErrorExample {json} Error-Response (HTTP):
 *    {
 *       errorCode":500,
 *       "errorMessage":"16562665EC17CDF08E97"
 *    }
 */