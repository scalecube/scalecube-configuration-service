/**
  * @api {ServiceMethod: save} /configuration/save save (entry)
  * @apiName Save
  * @apiGroup Methods
  * @apiVersion 0.0.0-CURRENT
  * @apiPermission Request / Response / Error-response
  *
  * @apiDescription This operation enable to save either to update (edit) a specific entry (setting(s)) applying the related key in the relevant Repository.
  * This method requires a write level permission granted for managers's API keys with related roles <b>Owner</b> either <b>Admin</b> only.
  * Upon the specified setting(s) was (were) saved then each could be updated i.e. overwritten by the common method applying the related key.
  *
  * @apiParam {Object} apiKey The requested API key (apiKey) which assigned with relevant role (permission level)
  * @apiParam {String} repository Specified name of the repository
  * @apiParam {String} key Specified key name for relevant configuration settings (objects) in the repository
  * @apiParam {JsonNode} value Specified node of settings (objects) to be stored either updated in the related repository
  *
  * @apiSuccess Acknowledgment Empty object
  *
  * @apiError {String} field invalid or non-existent repository
  *
  *
  * @apiErrorExample {json} WebSocket:
  * Request:
  *
  *     {
  *         "q": "/configuration/save",
  *         "sid": 1,
  *         "d":{
  *         "APIKey": "API-KEY",
  *         "repository": "specifiedRepoName",
  *         "key": "specifiedKeyName",
  *         "value": {
  *                     "name": "Gold",
  *                     "instrument": "XAU",
  *                     "DecimalPrecision" : "2",
  *                     "Rounding": "down"
  *                  }
  *         }
  *     }
  *
  * Response:
  *     {
  *         "q":"/configuration/save",
  *         "sid":1,
  *         "d":{}
  *     }
  *
  *     {
  *          "sig":1,
  *          "sid":1
  *     }
  *
  * Error Response:
  *     {
  *          "sig":2,
  *          "q":"/io.scalecube.services.error/500",
  *          "sid":1,
  *          "d":{
  *                  "errorCode":500,
  *                  "errorMessage":"repository: 'Name' not found"
  *          }
  *     }
  *
  * @apiErrorExample {json} RSocket:
  * Request:
  *     {
  *       "metadata":{
  *         "q": "/configuration/save"
  *         },
  *         "data":{
  *         "APIKey": "API-KEY",
  *         "repository": "specifiedRepoName",
  *         "key": "specifiedKeyName",
  *         "value": {
  *                     "name": "Gold",
  *                     "instrument": "XAU",
  *                     "DecimalPrecision" : "2",
  *                     "Rounding": "down"
  *                  }
  *         }
  *     }
  *
  * Response:
  *     {
  *         "data":{},
  *         "metadata":{
  *           "q": "/configuration/save"
  *         }
  *     }
  *
  * Error Response:
  *     {
  *         "data":{
  *         "errorCode":500,
  *         "errorMessage":"repository: 'Name' not found"
  *         },
  *         "metadata":{
  *             "q":"/io.scalecube.services.error/500"
  *         }
  *     }
  * @apiErrorExample {json} HTTP:
  * Request:
  *     {
  *         "APIKey": "API-KEY",
  *         "repository": "specifiedRepoName",
  *         "key": "specifiedKeyName",
  *         "value": {
  *                     "name": "Gold",
  *                     "instrument": "XAU",
  *                     "DecimalPrecision" : "2",
  *                     "Rounding": "down"
  *                  }
  *     }
  *
  * Response:
  *     {
  *
  *     }
  *
  * Error-Response (HTTP):
  *     {
  *        "errorCode":500,
  *        "errorMessage":"repository: 'Name' not found"
  *     }
  */